【HSPComplex】
　これは、HSPの機能を拡張するプラグインです。このプラグインを使うと、標準では
サポートされていない複素数型の変数を扱うことができるようになります。

【動作環境】
　Windows XP/Vista/7、HSP 3.xがインストールされていること。

【インストールのしかた】
　アーカイブの中の、「HSPComplex.dll」をHSPの実行ファイルと同じフォルダーに、
「hspcmplx.as」を common フォルダーに、「hspcmplx.hs」を hsphelp フォルダーに、
それぞれコピーしてください。

【アンインストールのしかた】
　「HSPComplex.dll」「hspcmplx.as」「hspcmplx.hs」を削除します。

【つかいかた】
　スクリプトの頭に、「#include "hspcmplx.as"」という行を書くことで使用できるよ
うになります。

【複素数型の説明】
　このプラグインを導入すると、複素数型("complex")が使用できるようになります。

　複素数を変数に代入するには、complex関数を使います。例えば、
	a = complex(3, 4)
とすると、変数 a が複素数型になり、 3 + 4i が代入されます。また、複素数の配列
を作るには、
	dimtype a,vartype("complex"),20
のようにします。

　四則計算は、整数や実数と同じようにできます。たとえば、
	print (complex(1,2)+complex(3,4))
と書けば、「4+6i」と表示されるはずです。なお、剰余(\)はエラーになります。

　複素数型への暗黙の型変換は、実数型、整数型からの変換をサポートしています。例
えば、
	print (complex(1,2)+3)
と書けば、「4+2i」と表示されるはずです。但し、文字列型から複素数型に変換しようとするとエラーになります。

　複素数型からの暗黙の型変換は、実数型、整数型、文字列型への変換をサポートして
います。文字列型への変換は、「3+4i」などの文字列に変換されます。
　実数型または整数型に変換する場合は、元の複素数型変数で虚部が0である必要があ
ります。虚数(虚部が非0)を変換しようとすると、実数型であればNaNが返りますが、整
数型であればエラーになります。

　比較演算子は複素数の性質上、「=」(等しい)と「!」(等しくない)のみをサポートし
ています(実部と虚部がともに等しい場合に、等号が成立します)。「>」や「<」などは
定義されないためエラーになります。
　また、論理演算やビットシフトはエラーになります。

【関数の説明】
　HSPドキュメントライブラリ用のhsファイルをインストールし、そちらを参照してく
ださい。搭載している関数は次の通りです。

	abscx	複素数の絶対値を返す
	acoscx	複素数の逆余弦を返す
	acoshcx	複素数の双曲線逆余弦を返す
	argcx	複素数の偏角を返す
	asincx	複素数の逆正弦を返す
	asinhcx	複素数の双曲線逆正弦を返す
	atancx	複素数の逆正接を返す
	atanhcx	複素数の双曲線逆正接を返す
	complex	複素数を代入する、複素数に変換する
	coscx	複素数の余弦を返す
	coshcx	複素数の双曲線余弦を返す
	expcx	複素数の指数を返す
	imagcx	複素数の虚部を返す
	log10cx	複素数の常用対数を返す
	logcx	複素数の自然対数を返す
	polar	極形式で複素数に変換する
	powcx	複素数の冪乗を求める
	realcx	複素数の実部を返す
	sincx	複素数の正弦を返す
	sinhcx	複素数の双曲線正弦を返す
	sqrtcx	複素数の平方根を返す
	tancx	複素数の正接を返す
	tanhcx	複素数の双曲線正接を返す

【ライセンスについて】
　このソフトウェアはどなたでも無償でご使用いただけますが、著作権を放棄するもの
ではありません。また、このDLLを使用した結果生じた一切の事象に関して、作者は責
任を負いませんので、ご理解の上ご利用ください。

【そのほか】
　ソースコード一式はGitHubのリポジトリに置いてあります。
　https://github.com/MihailJP/HSPComplex

【何かあったら】
　HSPComplexに関して万一バグがあったりした場合は、次の連絡先にどうぞ。
・メール： mihailjp@gmail.com
・Twitter： @MihailJP

【バージョン履歴】
[0.2] 2012年1月7日
　コサインの計算結果が正しくないのを直す。

[0.1] 2012年1月2日
　だいたい半日くらいでコードを書いた。
